import numpy
from sklearn import mixture
from collections import Counter

train=numpy.loadtxt('train',delimiter='\t',skiprows=1)
tr = train[:,0:20]
trl = train[:,21]

vald=numpy.loadtxt('val',delimiter='\t',skiprows=1)
va = vald[:,0:20]
val = vald[:,21]

test=numpy.loadtxt('test',delimiter='\t',skiprows=1)
te = test[:,0:20]
tel = test[:, 21]


max = 0
for i in range(1,10):
	numpy.random.seed(i)
	g = mixture.GMM(n_components=3, covariance_type='tied')
	g.means_ = numpy.random.random((3,21))
	g.covars_ = numpy.random.random((21,21))
	g.fit(tr)
	cor = val - g.predict(va)
	temp = Counter(cor)[1]
	print temp
	if (temp > max) :
		max = temp
		me = g.means_
		co = g.covars_

g = mixture.GMM(n_components=3, covariance_type='tied')
g.means_ = me
g.covars_ = co
g.fit(tr)
true = tel - g.predict(te)
temp = Counter(true)[1]	
print temp/300.0    #0.38

